C51 COMPILER V9.56.0.0   MIAN                                                              03/29/2018 19:32:03 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Objects\mian.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mian.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mian
                    -.lst) TABS(2) OBJECT(.\Objects\mian.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "absacc.h"
   3          #include "iic.h"
   4          
   5          #define setkeyboard(x) P4=((x&0x80)>>3)|((x&0x40)>>4);P3=x
   6          #define getkeyboard() ((P4&0x10)<<3)|((P4&0x04)<<4)|(P3&0x3f)
   7          
   8          sbit buzzer=P0^6;
   9          sbit relay=P0^4;
  10          bit key_flag,water_flag;
  11          
  12          float real_gm_value;
  13          unsigned int water_flow,water_price;
  14          unsigned char read_key_value,trg,cont;
  15          unsigned char display[8];
  16          unsigned char smg_duan[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  17                                    //   0    1    2    3    4    5    6    7    8    9  
  18          unsigned char smg_wei[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  19          //-----------------------------------------------
  20          
  21          /* Timer0 interrupt routine */
  22          void tm0_isr() interrupt 1 using 1
  23          {
  24   1        static unsigned char smg_count,key_count,water_count,i;
  25   1        smg_count++;key_count++;
  26   1        if(key_count==10)
  27   1        {
  28   2          key_count=0;
  29   2          key_flag=1;
  30   2        }
  31   1        if(smg_count==3)
  32   1        {
  33   2          smg_count=0;
  34   2          P2=0xc0;P0=0xff;P2=0;
  35   2          P2=0xe0;P0=~display[i];P2=0;
  36   2          P2=0xc0;P0=smg_wei[i];P2=0;
  37   2        
  38   2      //    XBYTE[0XC000]=0XFF;
  39   2      //    XBYTE[0XE000]=~smg_duan[i];
  40   2      //    XBYTE[0XC000]=(1<<i);
  41   2          i++;
  42   2          if(i==8)i=0;
  43   2        }
  44   1        if(water_flag)
  45   1        {
  46   2          water_count++;
  47   2          if(water_count==100)
  48   2          {
  49   3            water_count=0;
  50   3            water_flow++;
  51   3          }
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.56.0.0   MIAN                                                              03/29/2018 19:32:03 PAGE 2   

  55          //-----------------------------------------------
  56          void main()
  57          {
  58   1        AUXR |= 0x80;   //?????1T??
  59   1        TMOD &= 0xF0;   //???????
  60   1        TL0 = 0xCD;   //??????
  61   1        TH0 = 0xD4;   //??????
  62   1        TF0 = 0;    //??TF0??
  63   1        TR0 = 1;    //???0????  
  64   1        ET0 = 1;
  65   1        EA = 1;
  66   1        
  67   1        P2=0xa0;buzzer=0;relay=0;P2=0;
  68   1        display[0]=0x00;display[1]=smg_duan[0]|0x80;display[2]=smg_duan[5];display[3]=smg_duan[0];
  69   1        
  70   1        while(1)
  71   1        {
  72   2          ET0=0;
  73   2          real_gm_value=Read_PCF8591(0X01)/255.0*5.0;
  74   2          ET0=1;
  75   2          if(real_gm_value<1.25)
  76   2          {
  77   3            P2=0x80;P0=~0x01;P2=0;
  78   3          }
  79   2          else
  80   2          {
  81   3            P2=0x80;P0=~0x00;P2=0;
  82   3          }
  83   2          if(water_flag)      //出水
  84   2          {
  85   3            display[4]=smg_duan[water_flow/1000];
  86   3            display[5]=smg_duan[water_flow/100%10]|0x80;
  87   3            display[6]=smg_duan[water_flow/10%10];
  88   3            display[7]=smg_duan[water_flow%10];
  89   3            if(water_flow==9999)
  90   3            {
  91   4              P2=0xa0;relay=0;buzzer=0;P2=0;water_flag=0;
  92   4            }
  93   3          }
  94   2          else                //停水
  95   2          {
  96   3            water_price=water_flow*5;
  97   3            display[4]=smg_duan[water_price/10000];
  98   3            display[5]=smg_duan[water_price/1000%10]|0x80;
  99   3            display[6]=smg_duan[water_price/100%10];
 100   3            display[7]=smg_duan[water_price/10%10];
 101   3          }
 102   2          if(key_flag)
 103   2          {
 104   3            key_flag=0;
 105   3            setkeyboard(0xf0);
 106   3            read_key_value = getkeyboard();
 107   3            setkeyboard(0x0f);
 108   3            read_key_value = (read_key_value|getkeyboard())^0xff;
 109   3            trg=read_key_value&(read_key_value^cont);
 110   3            cont=read_key_value;
 111   3            
 112   3            if(water_flag==0)
 113   3            {
 114   4              switch(trg)
 115   4              {
 116   5                case 0x81:P2=0xa0;relay=1;buzzer=0;P2=0;
C51 COMPILER V9.56.0.0   MIAN                                                              03/29/2018 19:32:03 PAGE 3   

 117   5                water_price=0;
 118   5                water_flow=0;
 119   5                water_flag=1;
 120   5                break;//s7        出水
 121   5              }
 122   4            }
 123   3            switch(trg)
 124   3            {
 125   4              case 0x88:break;
 126   4              case 0x84:break;
 127   4              case 0x82:P2=0xa0;relay=0;buzzer=0;P2=0;water_flag=0;break;//s6       停水
 128   4              
 129   4            }
 130   3            
 131   3          }
 132   2        }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    583    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

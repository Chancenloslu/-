C51 COMPILER V9.56.0.0   MAIN                                                              03/28/2018 17:43:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc15f2k60s2.h"
   2          #include "onewire.h"
   3          
   4          #define setkeyboard(x) P4=((x&0x80)>>3)|((x&0x40)>>4);P3=x
   5          #define getkeyboard() ((P4&0x10)<<3)|((P4&0x04)<<4)|(P3&0x3f)
   6          sbit buzzer=P0^6;
   7          
   8          unsigned char key_count,smg_count,read_key_data,trg,cont,mode_index,time_minute_set,read_temp,pwm_count=0;
   9          unsigned int time_second_set,time_count;
  10          bit key_flag,display_flag,mode_index_flag;
  11          unsigned char display[8];
  12          unsigned char smg_com[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  13          unsigned char smg_duan[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  14                                  //   0    1    2    3    4    5    6    7    8    9 
  15          
  16          /* Timer0 interrupt routine */
  17          void tm1_isr() interrupt 3 using 2
  18          {
  19   1        static unsigned char i;
  20   1        smg_count++;
  21   1        if(smg_count==3)
  22   1        {
  23   2          smg_count=0;
  24   2          P2=((P2&0x1f)|0xc0);P0=0;P2&=0x1f;
  25   2          P2=((P2&0x1f)|0xe0);P0=~display[i];P2&=0x1f;    
  26   2          P2=((P2&0x1f)|0xc0);P0=smg_com[i];P2&=0x1f;
  27   2      //    P2=0xc0;P0=~display[i];P2=0x00;
  28   2          i++;
  29   2          if(i==8)i=0;
  30   2          
  31   2        }
  32   1      }
  33          void tm0_isr() interrupt 1 using 1
  34          {
  35   1        key_count++;
  36   1        if(key_count==100)
  37   1        {
  38   2          key_count=0;
  39   2          key_flag=1;
  40   2        }
  41   1      
  42   1      
  43   1        if(time_second_set>0)
  44   1        {
  45   2          pwm_count++;
  46   2          switch(mode_index)
  47   2          {
  48   3            case 1:{if(pwm_count==8)P34=1;}break;
  49   3            case 2:{if(pwm_count==7)P34=1;}break;
  50   3            case 3:{if(pwm_count==3)P34=1;}break;
  51   3          }
  52   2          if(pwm_count==10)
  53   2          {
  54   3            pwm_count=0;
C51 COMPILER V9.56.0.0   MAIN                                                              03/28/2018 17:43:04 PAGE 2   

  55   3            P34=0;
  56   3          }
  57   2          time_count++;
  58   2          if(time_count==10000)
  59   2          {
  60   3            time_count=0;
  61   3            time_second_set--;
  62   3          }
  63   2        }
  64   1        else
  65   1        {
  66   2          P2=0x80;P0=~0x00;P2=0x00;
  67   2          P34=0;
  68   2        }
  69   1      
  70   1      }
  71          
  72          void main()
  73          {
  74   1        
  75   1        AUXR |= 0x80;   //1T
  76   1        AUXR |= 0x40;   //1T
  77   1        TMOD &= 0xFF;   //设置定时器模式
  78   1        TL0 = 0xAE;   //
  79   1        TH0 = 0xFB;   //初值
  80   1        TF0 = 0;    //清零TF0
  81   1        TR0 = 1;    //T0
  82   1        TL1 = 0xCD;   //
  83   1        TH1 = 0xD4;   //初值1ms
  84   1        TF1 = 0;    //清零TF1
  85   1        TR1 = 1;    //T1
  86   1        ET0 = 1;
  87   1        ET1 = 1;
  88   1        EA = 1;
  89   1        
  90   1      //  PCA_PWM0&=0x3f;   //选择8位PWM
  91   1      //  CCAPM0=0x42;
  92   1        //CCAP0H = CCAP0L = CDH//20%;CCAP0H = CCAP0L = B3H//30%;CCAP0H = CCAP0L = 4DH;//70%
  93   1        mode_index=1;
  94   1        time_second_set=0;
  95   1        P2=((P2&0x1f)|0xa0);buzzer=0;P2&=0x1f;
  96   1        display[0]=0x40;display[2]=0x40;display[3]=0x00;
  97   1        while(1)
  98   1        {
  99   2      
 100   2          read_temp=(unsigned char)rd_temprature_f();
 101   2          
 102   2          switch(mode_index)
 103   2          {
 104   3            case 1:
 105   3            {
 106   4              display[1]=smg_duan[1];
 107   4              if(time_second_set>0)
 108   4              {
 109   5                P2=((P2&0x1f)|0x80);P0=~0x01;P2&=0x1f;
 110   5              }
 111   4            }break;
 112   3            case 2:
 113   3            {
 114   4              display[1]=smg_duan[2];
 115   4              if(time_second_set>0)
 116   4              {
C51 COMPILER V9.56.0.0   MAIN                                                              03/28/2018 17:43:04 PAGE 3   

 117   5                P2=((P2&0x1f)|0x80);P0=~0x02;P2&=0x1f;        
 118   5              }
 119   4            }break;
 120   3            case 3:
 121   3            {
 122   4              display[1]=smg_duan[3];
 123   4              if(time_second_set>0)
 124   4              {
 125   5                P2=((P2&0x1f)|0x80);P0=~0x04;P2&=0x1f;
 126   5              } 
 127   4            }break;
 128   3            case 4:display[1]=smg_duan[4];break;
 129   3          }
 130   2      
 131   2          if(mode_index==4)
 132   2          {
 133   3            display[4]=0x00;
 134   3            display[5]=smg_duan[read_temp/10];
 135   3            display[6]=smg_duan[read_temp%10];
 136   3            display[7]=0x39;
 137   3          }
 138   2          else
 139   2          {
 140   3            display[4]=smg_duan[0];
 141   3            display[5]=smg_duan[time_second_set/100];
 142   3            display[6]=smg_duan[time_second_set/10%10];
 143   3            display[7]=smg_duan[time_second_set%10];
 144   3          }
 145   2        
 146   2          if(key_flag)
 147   2          {
 148   3            key_flag=0;
 149   3            
 150   3            setkeyboard(0x0f);
 151   3            read_key_data=getkeyboard();
 152   3            setkeyboard(0xf0);
 153   3            read_key_data=(read_key_data|getkeyboard())^0xff;
 154   3            trg=read_key_data&(read_key_data^cont);
 155   3            cont=read_key_data;
 156   3            switch(trg)
 157   3            {
 158   4              case 0x81:    
 159   4              {
 160   5                mode_index_flag=~mode_index_flag;
 161   5                if(mode_index_flag)
 162   5                {
 163   6                  mode_index=4;
 164   6                }
 165   5                else
 166   5                {
 167   6                  mode_index=1;
 168   6                }
 169   5              };break;//s7
 170   4              case 0x82:    
 171   4              {
 172   5                time_second_set=0;
 173   5                P2=((P2&0x1f)|0x80);P0=~0x00;P2&=0x1f;
 174   5                P34=0;
 175   5              };break;//s6
 176   4      
 177   4              case 0x84:            
 178   4              {
C51 COMPILER V9.56.0.0   MAIN                                                              03/28/2018 17:43:04 PAGE 4   

 179   5                time_second_set+=60;
 180   5                if(time_second_set>120)time_second_set=0;
 181   5              }break;       //s5
 182   4              case 0x88:        
 183   4              {
 184   5                mode_index++;
 185   5                if(mode_index>=4)mode_index=1;
 186   5              }break;     //s4
 187   4            }
 188   3            
 189   3          }
 190   2        }
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    681    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
